{
  "Attributes": {
    "key": " Key"
  },
  "RefAttributes": {
    "ref": " Ref<T>",
    "key": " Key"
  },
  "ClassAttributes": {
    "ref": " LegacyRef<T>",
    "key": " Key"
  },
  "DOMAttributes": {
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "AriaAttributes": {
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string"
  },
  "HTMLAttributes": {
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "AllHTMLAttributes": {
    "accept": " string",
    "acceptCharset": " string",
    "action": " string",
    "allowFullScreen": " boolean",
    "allowTransparency": " boolean",
    "alt": " string",
    "as": " string",
    "async": " boolean",
    "autoComplete": " string",
    "autoFocus": " boolean",
    "autoPlay": " boolean",
    "capture": " boolean | string",
    "cellPadding": " number | string",
    "cellSpacing": " number | string",
    "charSet": " string",
    "challenge": " string",
    "checked": " boolean",
    "cite": " string",
    "classID": " string",
    "cols": " number",
    "colSpan": " number",
    "content": " string",
    "controls": " boolean",
    "coords": " string",
    "crossOrigin": " string",
    "data": " string",
    "dateTime": " string",
    "default": " boolean",
    "defer": " boolean",
    "disabled": " boolean",
    "download": " any",
    "encType": " string",
    "form": " string",
    "formAction": " string",
    "formEncType": " string",
    "formMethod": " string",
    "formNoValidate": " boolean",
    "formTarget": " string",
    "frameBorder": " number | string",
    "headers": " string",
    "height": " number | string",
    "high": " number",
    "href": " string",
    "hrefLang": " string",
    "htmlFor": " string",
    "httpEquiv": " string",
    "integrity": " string",
    "keyParams": " string",
    "keyType": " string",
    "kind": " string",
    "label": " string",
    "list": " string",
    "loop": " boolean",
    "low": " number",
    "manifest": " string",
    "marginHeight": " number",
    "marginWidth": " number",
    "max": " number | string",
    "maxLength": " number",
    "media": " string",
    "mediaGroup": " string",
    "method": " string",
    "min": " number | string",
    "minLength": " number",
    "multiple": " boolean",
    "muted": " boolean",
    "name": " string",
    "nonce": " string",
    "noValidate": " boolean",
    "open": " boolean",
    "optimum": " number",
    "pattern": " string",
    "placeholder": " string",
    "playsInline": " boolean",
    "poster": " string",
    "preload": " string",
    "readOnly": " boolean",
    "rel": " string",
    "required": " boolean",
    "reversed": " boolean",
    "rows": " number",
    "rowSpan": " number",
    "sandbox": " string",
    "scope": " string",
    "scoped": " boolean",
    "scrolling": " string",
    "seamless": " boolean",
    "selected": " boolean",
    "shape": " string",
    "size": " number",
    "sizes": " string",
    "span": " number",
    "src": " string",
    "srcDoc": " string",
    "srcLang": " string",
    "srcSet": " string",
    "start": " number",
    "step": " number | string",
    "summary": " string",
    "target": " string",
    "type": " string",
    "useMap": " string",
    "value": " string | string[] | number",
    "width": " number | string",
    "wmode": " string",
    "wrap": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "AnchorHTMLAttributes": {
    "download": " any",
    "href": " string",
    "hrefLang": " string",
    "media": " string",
    "ping": " string",
    "rel": " string",
    "target": " string",
    "type": " string",
    "referrerPolicy": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "AudioHTMLAttributes": {
    "autoPlay": " boolean",
    "controls": " boolean",
    "controlsList": " string",
    "crossOrigin": " string",
    "loop": " boolean",
    "mediaGroup": " string",
    "muted": " boolean",
    "playsinline": " boolean",
    "preload": " string",
    "src": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "AreaHTMLAttributes": {
    "alt": " string",
    "coords": " string",
    "download": " any",
    "href": " string",
    "hrefLang": " string",
    "media": " string",
    "rel": " string",
    "shape": " string",
    "target": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "BaseHTMLAttributes": {
    "href": " string",
    "target": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "BlockquoteHTMLAttributes": {
    "cite": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ButtonHTMLAttributes": {
    "autoFocus": " boolean",
    "disabled": " boolean",
    "form": " string",
    "formAction": " string",
    "formEncType": " string",
    "formMethod": " string",
    "formNoValidate": " boolean",
    "formTarget": " string",
    "name": " string",
    "type": " 'submit' | 'reset' | 'button'",
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "CanvasHTMLAttributes": {
    "height": " number | string",
    "width": " number | string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ColHTMLAttributes": {
    "span": " number",
    "width": " number | string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ColgroupHTMLAttributes": {
    "span": " number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "DataHTMLAttributes": {
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "DetailsHTMLAttributes": {
    "open": " boolean",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "DelHTMLAttributes": {
    "cite": " string",
    "dateTime": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "DialogHTMLAttributes": {
    "open": " boolean",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "EmbedHTMLAttributes": {
    "height": " number | string",
    "src": " string",
    "type": " string",
    "width": " number | string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "FieldsetHTMLAttributes": {
    "disabled": " boolean",
    "form": " string",
    "name": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "FormHTMLAttributes": {
    "acceptCharset": " string",
    "action": " string",
    "autoComplete": " string",
    "encType": " string",
    "method": " string",
    "name": " string",
    "noValidate": " boolean",
    "target": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "HtmlHTMLAttributes": {
    "manifest": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "IframeHTMLAttributes": {
    "allow": " string",
    "allowFullScreen": " boolean",
    "allowTransparency": " boolean",
    "frameBorder": " number | string",
    "height": " number | string",
    "marginHeight": " number",
    "marginWidth": " number",
    "name": " string",
    "referrerPolicy": " string",
    "sandbox": " string",
    "scrolling": " string",
    "seamless": " boolean",
    "src": " string",
    "srcDoc": " string",
    "width": " number | string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ImgHTMLAttributes": {
    "alt": " string",
    "crossOrigin": " \"anonymous\" | \"use-credentials\" | \"\"",
    "decoding": " \"async\" | \"auto\" | \"sync\"",
    "height": " number | string",
    "sizes": " string",
    "src": " string",
    "srcSet": " string",
    "useMap": " string",
    "width": " number | string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "InsHTMLAttributes": {
    "cite": " string",
    "dateTime": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "InputHTMLAttributes": {
    "accept": " string",
    "alt": " string",
    "autoComplete": " string",
    "autoFocus": " boolean",
    "capture": " boolean | string",
    "checked": " boolean",
    "crossOrigin": " string",
    "disabled": " boolean",
    "form": " string",
    "formAction": " string",
    "formEncType": " string",
    "formMethod": " string",
    "formNoValidate": " boolean",
    "formTarget": " string",
    "height": " number | string",
    "list": " string",
    "max": " number | string",
    "maxLength": " number",
    "min": " number | string",
    "minLength": " number",
    "multiple": " boolean",
    "name": " string",
    "pattern": " string",
    "placeholder": " string",
    "readOnly": " boolean",
    "required": " boolean",
    "size": " number",
    "src": " string",
    "step": " number | string",
    "type": " string",
    "value": " string | string[] | number",
    "width": " number | string",
    "onChange": " FormEventHandler<T>",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "KeygenHTMLAttributes": {
    "autoFocus": " boolean",
    "challenge": " string",
    "disabled": " boolean",
    "form": " string",
    "keyType": " string",
    "keyParams": " string",
    "name": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "LabelHTMLAttributes": {
    "form": " string",
    "htmlFor": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "LiHTMLAttributes": {
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "LinkHTMLAttributes": {
    "as": " string",
    "crossOrigin": " string",
    "href": " string",
    "hrefLang": " string",
    "integrity": " string",
    "media": " string",
    "rel": " string",
    "sizes": " string",
    "type": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "MapHTMLAttributes": {
    "name": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "MenuHTMLAttributes": {
    "type": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "MediaHTMLAttributes": {
    "autoPlay": " boolean",
    "controls": " boolean",
    "controlsList": " string",
    "crossOrigin": " string",
    "loop": " boolean",
    "mediaGroup": " string",
    "muted": " boolean",
    "playsinline": " boolean",
    "preload": " string",
    "src": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "MetaHTMLAttributes": {
    "charSet": " string",
    "content": " string",
    "httpEquiv": " string",
    "name": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "MeterHTMLAttributes": {
    "form": " string",
    "high": " number",
    "low": " number",
    "max": " number | string",
    "min": " number | string",
    "optimum": " number",
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "QuoteHTMLAttributes": {
    "cite": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ObjectHTMLAttributes": {
    "classID": " string",
    "data": " string",
    "form": " string",
    "height": " number | string",
    "name": " string",
    "type": " string",
    "useMap": " string",
    "width": " number | string",
    "wmode": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "OlHTMLAttributes": {
    "reversed": " boolean",
    "start": " number",
    "type": " '1' | 'a' | 'A' | 'i' | 'I'",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "OptgroupHTMLAttributes": {
    "disabled": " boolean",
    "label": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "OptionHTMLAttributes": {
    "disabled": " boolean",
    "label": " string",
    "selected": " boolean",
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "OutputHTMLAttributes": {
    "form": " string",
    "htmlFor": " string",
    "name": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ParamHTMLAttributes": {
    "name": " string",
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ProgressHTMLAttributes": {
    "max": " number | string",
    "value": " string | string[] | number",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ScriptHTMLAttributes": {
    "async": " boolean",
    "charSet": " string",
    "crossOrigin": " string",
    "defer": " boolean",
    "integrity": " string",
    "noModule": " boolean",
    "nonce": " string",
    "src": " string",
    "type": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "SelectHTMLAttributes": {
    "autoComplete": " string",
    "autoFocus": " boolean",
    "disabled": " boolean",
    "form": " string",
    "multiple": " boolean",
    "name": " string",
    "required": " boolean",
    "size": " number",
    "value": " string | string[] | number",
    "onChange": " FormEventHandler<T>",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "SourceHTMLAttributes": {
    "media": " string",
    "sizes": " string",
    "src": " string",
    "srcSet": " string",
    "type": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "StyleHTMLAttributes": {
    "media": " string",
    "nonce": " string",
    "scoped": " boolean",
    "type": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "TableHTMLAttributes": {
    "cellPadding": " number | string",
    "cellSpacing": " number | string",
    "summary": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "TextareaHTMLAttributes": {
    "autoComplete": " string",
    "autoFocus": " boolean",
    "cols": " number",
    "dirName": " string",
    "disabled": " boolean",
    "form": " string",
    "maxLength": " number",
    "minLength": " number",
    "name": " string",
    "placeholder": " string",
    "readOnly": " boolean",
    "required": " boolean",
    "rows": " number",
    "value": " string | string[] | number",
    "wrap": " string",
    "onChange": " FormEventHandler<T>",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "TdHTMLAttributes": {
    "align": " \"left\" | \"center\" | \"right\" | \"justify\" | \"char\"",
    "colSpan": " number",
    "headers": " string",
    "rowSpan": " number",
    "scope": " string",
    "abbr": " string",
    "valign": " \"top\" | \"middle\" | \"bottom\" | \"baseline\"",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "ThHTMLAttributes": {
    "align": " \"left\" | \"center\" | \"right\" | \"justify\" | \"char\"",
    "colSpan": " number",
    "headers": " string",
    "rowSpan": " number",
    "scope": " string",
    "abbr": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "TimeHTMLAttributes": {
    "dateTime": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "TrackHTMLAttributes": {
    "default": " boolean",
    "kind": " string",
    "label": " string",
    "src": " string",
    "srcLang": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "VideoHTMLAttributes": {
    "height": " number | string",
    "playsInline": " boolean",
    "poster": " string",
    "width": " number | string",
    "disablePictureInPicture": " boolean",
    "autoPlay": " boolean",
    "controls": " boolean",
    "controlsList": " string",
    "crossOrigin": " string",
    "loop": " boolean",
    "mediaGroup": " string",
    "muted": " boolean",
    "playsinline": " boolean",
    "preload": " string",
    "src": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "SVGAttributes": {
    "className": " string",
    "color": " string",
    "height": " number | string",
    "id": " string",
    "lang": " string",
    "max": " number | string",
    "media": " string",
    "method": " string",
    "min": " number | string",
    "name": " string",
    "style": " CSSProperties",
    "target": " string",
    "type": " string",
    "width": " number | string",
    "role": " string",
    "tabIndex": " number",
    "crossOrigin": " \"anonymous\" | \"use-credentials\" | \"\"",
    "accentHeight": " number | string",
    "accumulate": " \"none\" | \"sum\"",
    "additive": " \"replace\" | \"sum\"",
    "alignmentBaseline": " \"auto\" | \"baseline\" | \"before-edge\" | \"text-before-edge\" | \"middle\" | \"central\" | \"after-edge\" |\n        \"text-after-edge\" | \"ideographic\" | \"alphabetic\" | \"hanging\" | \"mathematical\" | \"inherit\"",
    "allowReorder": " \"no\" | \"yes\"",
    "alphabetic": " number | string",
    "amplitude": " number | string",
    "arabicForm": " \"initial\" | \"medial\" | \"terminal\" | \"isolated\"",
    "ascent": " number | string",
    "attributeName": " string",
    "attributeType": " string",
    "autoReverse": " Booleanish",
    "azimuth": " number | string",
    "baseFrequency": " number | string",
    "baselineShift": " number | string",
    "baseProfile": " number | string",
    "bbox": " number | string",
    "begin": " number | string",
    "bias": " number | string",
    "by": " number | string",
    "calcMode": " number | string",
    "capHeight": " number | string",
    "clip": " number | string",
    "clipPath": " string",
    "clipPathUnits": " number | string",
    "clipRule": " number | string",
    "colorInterpolation": " number | string",
    "colorInterpolationFilters": " \"auto\" | \"sRGB\" | \"linearRGB\" | \"inherit\"",
    "colorProfile": " number | string",
    "colorRendering": " number | string",
    "contentScriptType": " number | string",
    "contentStyleType": " number | string",
    "cursor": " number | string",
    "cx": " number | string",
    "cy": " number | string",
    "d": " string",
    "decelerate": " number | string",
    "descent": " number | string",
    "diffuseConstant": " number | string",
    "direction": " number | string",
    "display": " number | string",
    "divisor": " number | string",
    "dominantBaseline": " number | string",
    "dur": " number | string",
    "dx": " number | string",
    "dy": " number | string",
    "edgeMode": " number | string",
    "elevation": " number | string",
    "enableBackground": " number | string",
    "end": " number | string",
    "exponent": " number | string",
    "externalResourcesRequired": " Booleanish",
    "fill": " string",
    "fillOpacity": " number | string",
    "fillRule": " \"nonzero\" | \"evenodd\" | \"inherit\"",
    "filter": " string",
    "filterRes": " number | string",
    "filterUnits": " number | string",
    "floodColor": " number | string",
    "floodOpacity": " number | string",
    "focusable": " Booleanish | \"auto\"",
    "fontFamily": " string",
    "fontSize": " number | string",
    "fontSizeAdjust": " number | string",
    "fontStretch": " number | string",
    "fontStyle": " number | string",
    "fontVariant": " number | string",
    "fontWeight": " number | string",
    "format": " number | string",
    "from": " number | string",
    "fx": " number | string",
    "fy": " number | string",
    "g1": " number | string",
    "g2": " number | string",
    "glyphName": " number | string",
    "glyphOrientationHorizontal": " number | string",
    "glyphOrientationVertical": " number | string",
    "glyphRef": " number | string",
    "gradientTransform": " string",
    "gradientUnits": " string",
    "hanging": " number | string",
    "horizAdvX": " number | string",
    "horizOriginX": " number | string",
    "href": " string",
    "ideographic": " number | string",
    "imageRendering": " number | string",
    "in2": " number | string",
    "in": " string",
    "intercept": " number | string",
    "k1": " number | string",
    "k2": " number | string",
    "k3": " number | string",
    "k4": " number | string",
    "k": " number | string",
    "kernelMatrix": " number | string",
    "kernelUnitLength": " number | string",
    "kerning": " number | string",
    "keyPoints": " number | string",
    "keySplines": " number | string",
    "keyTimes": " number | string",
    "lengthAdjust": " number | string",
    "letterSpacing": " number | string",
    "lightingColor": " number | string",
    "limitingConeAngle": " number | string",
    "local": " number | string",
    "markerEnd": " string",
    "markerHeight": " number | string",
    "markerMid": " string",
    "markerStart": " string",
    "markerUnits": " number | string",
    "markerWidth": " number | string",
    "mask": " string",
    "maskContentUnits": " number | string",
    "maskUnits": " number | string",
    "mathematical": " number | string",
    "mode": " number | string",
    "numOctaves": " number | string",
    "offset": " number | string",
    "opacity": " number | string",
    "operator": " number | string",
    "order": " number | string",
    "orient": " number | string",
    "orientation": " number | string",
    "origin": " number | string",
    "overflow": " number | string",
    "overlinePosition": " number | string",
    "overlineThickness": " number | string",
    "paintOrder": " number | string",
    "panose1": " number | string",
    "pathLength": " number | string",
    "patternContentUnits": " string",
    "patternTransform": " number | string",
    "patternUnits": " string",
    "pointerEvents": " number | string",
    "points": " string",
    "pointsAtX": " number | string",
    "pointsAtY": " number | string",
    "pointsAtZ": " number | string",
    "preserveAlpha": " Booleanish",
    "preserveAspectRatio": " string",
    "primitiveUnits": " number | string",
    "r": " number | string",
    "radius": " number | string",
    "refX": " number | string",
    "refY": " number | string",
    "renderingIntent": " number | string",
    "repeatCount": " number | string",
    "repeatDur": " number | string",
    "requiredExtensions": " number | string",
    "requiredFeatures": " number | string",
    "restart": " number | string",
    "result": " string",
    "rotate": " number | string",
    "rx": " number | string",
    "ry": " number | string",
    "scale": " number | string",
    "seed": " number | string",
    "shapeRendering": " number | string",
    "slope": " number | string",
    "spacing": " number | string",
    "specularConstant": " number | string",
    "specularExponent": " number | string",
    "speed": " number | string",
    "spreadMethod": " string",
    "startOffset": " number | string",
    "stdDeviation": " number | string",
    "stemh": " number | string",
    "stemv": " number | string",
    "stitchTiles": " number | string",
    "stopColor": " string",
    "stopOpacity": " number | string",
    "strikethroughPosition": " number | string",
    "strikethroughThickness": " number | string",
    "string": " number | string",
    "stroke": " string",
    "strokeDasharray": " string | number",
    "strokeDashoffset": " string | number",
    "strokeLinecap": " \"butt\" | \"round\" | \"square\" | \"inherit\"",
    "strokeLinejoin": " \"miter\" | \"round\" | \"bevel\" | \"inherit\"",
    "strokeMiterlimit": " number | string",
    "strokeOpacity": " number | string",
    "strokeWidth": " number | string",
    "surfaceScale": " number | string",
    "systemLanguage": " number | string",
    "tableValues": " number | string",
    "targetX": " number | string",
    "targetY": " number | string",
    "textAnchor": " string",
    "textDecoration": " number | string",
    "textLength": " number | string",
    "textRendering": " number | string",
    "to": " number | string",
    "transform": " string",
    "u1": " number | string",
    "u2": " number | string",
    "underlinePosition": " number | string",
    "underlineThickness": " number | string",
    "unicode": " number | string",
    "unicodeBidi": " number | string",
    "unicodeRange": " number | string",
    "unitsPerEm": " number | string",
    "vAlphabetic": " number | string",
    "values": " string",
    "vectorEffect": " number | string",
    "version": " string",
    "vertAdvY": " number | string",
    "vertOriginX": " number | string",
    "vertOriginY": " number | string",
    "vHanging": " number | string",
    "vIdeographic": " number | string",
    "viewBox": " string",
    "viewTarget": " number | string",
    "visibility": " number | string",
    "vMathematical": " number | string",
    "widths": " number | string",
    "wordSpacing": " number | string",
    "writingMode": " number | string",
    "x1": " number | string",
    "x2": " number | string",
    "x": " number | string",
    "xChannelSelector": " string",
    "xHeight": " number | string",
    "xlinkActuate": " string",
    "xlinkArcrole": " string",
    "xlinkHref": " string",
    "xlinkRole": " string",
    "xlinkShow": " string",
    "xlinkTitle": " string",
    "xlinkType": " string",
    "xmlBase": " string",
    "xmlLang": " string",
    "xmlns": " string",
    "xmlnsXlink": " string",
    "xmlSpace": " string",
    "y1": " number | string",
    "y2": " number | string",
    "y": " number | string",
    "yChannelSelector": " string",
    "z": " number | string",
    "zoomAndPan": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "WebViewHTMLAttributes": {
    "allowFullScreen": " boolean",
    "allowpopups": " boolean",
    "autoFocus": " boolean",
    "autosize": " boolean",
    "blinkfeatures": " string",
    "disableblinkfeatures": " string",
    "disableguestresize": " boolean",
    "disablewebsecurity": " boolean",
    "guestinstance": " string",
    "httpreferrer": " string",
    "nodeintegration": " boolean",
    "partition": " string",
    "plugins": " boolean",
    "preload": " string",
    "src": " string",
    "useragent": " string",
    "webpreferences": " string",
    "defaultChecked": " boolean",
    "defaultValue": " string | number | string[]",
    "suppressContentEditableWarning": " boolean",
    "suppressHydrationWarning": " boolean",
    "accessKey": " string",
    "className": " string",
    "contentEditable": " Booleanish | \"inherit\"",
    "contextMenu": " string",
    "dir": " string",
    "draggable": " Booleanish",
    "hidden": " boolean",
    "id": " string",
    "lang": " string",
    "placeholder": " string",
    "slot": " string",
    "spellCheck": " Booleanish",
    "style": " CSSProperties",
    "tabIndex": " number",
    "title": " string",
    "translate": " 'yes' | 'no'",
    "radioGroup": " string",
    "role": " string",
    "about": " string",
    "datatype": " string",
    "inlist": " any",
    "prefix": " string",
    "property": " string",
    "resource": " string",
    "typeof": " string",
    "vocab": " string",
    "autoCapitalize": " string",
    "autoCorrect": " string",
    "autoSave": " string",
    "color": " string",
    "itemProp": " string",
    "itemScope": " boolean",
    "itemType": " string",
    "itemID": " string",
    "itemRef": " string",
    "results": " number",
    "security": " string",
    "unselectable": " 'on' | 'off'",
    "inputMode": " 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'",
    "is": " string",
    "aria-activedescendant": " string",
    "aria-atomic": " boolean | 'false' | 'true'",
    "aria-autocomplete": " 'none' | 'inline' | 'list' | 'both'",
    "aria-busy": " boolean | 'false' | 'true'",
    "aria-checked": " boolean | 'false' | 'mixed' | 'true'",
    "aria-colcount": " number",
    "aria-colindex": " number",
    "aria-colspan": " number",
    "aria-controls": " string",
    "aria-current": " boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time'",
    "aria-describedby": " string",
    "aria-details": " string",
    "aria-disabled": " boolean | 'false' | 'true'",
    "aria-dropeffect": " 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'",
    "aria-errormessage": " string",
    "aria-expanded": " boolean | 'false' | 'true'",
    "aria-flowto": " string",
    "aria-grabbed": " boolean | 'false' | 'true'",
    "aria-haspopup": " boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'",
    "aria-hidden": " boolean | 'false' | 'true'",
    "aria-invalid": " boolean | 'false' | 'true' | 'grammar' | 'spelling'",
    "aria-keyshortcuts": " string",
    "aria-label": " string",
    "aria-labelledby": " string",
    "aria-level": " number",
    "aria-live": " 'off' | 'assertive' | 'polite'",
    "aria-modal": " boolean | 'false' | 'true'",
    "aria-multiline": " boolean | 'false' | 'true'",
    "aria-multiselectable": " boolean | 'false' | 'true'",
    "aria-orientation": " 'horizontal' | 'vertical'",
    "aria-owns": " string",
    "aria-placeholder": " string",
    "aria-posinset": " number",
    "aria-pressed": " boolean | 'false' | 'mixed' | 'true'",
    "aria-readonly": " boolean | 'false' | 'true'",
    "aria-relevant": " 'additions' | 'additions text' | 'all' | 'removals' | 'text'",
    "aria-required": " boolean | 'false' | 'true'",
    "aria-roledescription": " string",
    "aria-rowcount": " number",
    "aria-rowindex": " number",
    "aria-rowspan": " number",
    "aria-selected": " boolean | 'false' | 'true'",
    "aria-setsize": " number",
    "aria-sort": " 'none' | 'ascending' | 'descending' | 'other'",
    "aria-valuemax": " number",
    "aria-valuemin": " number",
    "aria-valuenow": " number",
    "aria-valuetext": " string",
    "children": " ReactNode",
    "dangerouslySetInnerHTML": " {\n            __html: string;\n        }",
    "onCopy": " ClipboardEventHandler<T>",
    "onCopyCapture": " ClipboardEventHandler<T>",
    "onCut": " ClipboardEventHandler<T>",
    "onCutCapture": " ClipboardEventHandler<T>",
    "onPaste": " ClipboardEventHandler<T>",
    "onPasteCapture": " ClipboardEventHandler<T>",
    "onCompositionEnd": " CompositionEventHandler<T>",
    "onCompositionEndCapture": " CompositionEventHandler<T>",
    "onCompositionStart": " CompositionEventHandler<T>",
    "onCompositionStartCapture": " CompositionEventHandler<T>",
    "onCompositionUpdate": " CompositionEventHandler<T>",
    "onCompositionUpdateCapture": " CompositionEventHandler<T>",
    "onFocus": " FocusEventHandler<T>",
    "onFocusCapture": " FocusEventHandler<T>",
    "onBlur": " FocusEventHandler<T>",
    "onBlurCapture": " FocusEventHandler<T>",
    "onChange": " FormEventHandler<T>",
    "onChangeCapture": " FormEventHandler<T>",
    "onBeforeInput": " FormEventHandler<T>",
    "onBeforeInputCapture": " FormEventHandler<T>",
    "onInput": " FormEventHandler<T>",
    "onInputCapture": " FormEventHandler<T>",
    "onReset": " FormEventHandler<T>",
    "onResetCapture": " FormEventHandler<T>",
    "onSubmit": " FormEventHandler<T>",
    "onSubmitCapture": " FormEventHandler<T>",
    "onInvalid": " FormEventHandler<T>",
    "onInvalidCapture": " FormEventHandler<T>",
    "onLoad": " ReactEventHandler<T>",
    "onLoadCapture": " ReactEventHandler<T>",
    "onError": " ReactEventHandler<T>",
    "onErrorCapture": " ReactEventHandler<T>",
    "onKeyDown": " KeyboardEventHandler<T>",
    "onKeyDownCapture": " KeyboardEventHandler<T>",
    "onKeyPress": " KeyboardEventHandler<T>",
    "onKeyPressCapture": " KeyboardEventHandler<T>",
    "onKeyUp": " KeyboardEventHandler<T>",
    "onKeyUpCapture": " KeyboardEventHandler<T>",
    "onAbort": " ReactEventHandler<T>",
    "onAbortCapture": " ReactEventHandler<T>",
    "onCanPlay": " ReactEventHandler<T>",
    "onCanPlayCapture": " ReactEventHandler<T>",
    "onCanPlayThrough": " ReactEventHandler<T>",
    "onCanPlayThroughCapture": " ReactEventHandler<T>",
    "onDurationChange": " ReactEventHandler<T>",
    "onDurationChangeCapture": " ReactEventHandler<T>",
    "onEmptied": " ReactEventHandler<T>",
    "onEmptiedCapture": " ReactEventHandler<T>",
    "onEncrypted": " ReactEventHandler<T>",
    "onEncryptedCapture": " ReactEventHandler<T>",
    "onEnded": " ReactEventHandler<T>",
    "onEndedCapture": " ReactEventHandler<T>",
    "onLoadedData": " ReactEventHandler<T>",
    "onLoadedDataCapture": " ReactEventHandler<T>",
    "onLoadedMetadata": " ReactEventHandler<T>",
    "onLoadedMetadataCapture": " ReactEventHandler<T>",
    "onLoadStart": " ReactEventHandler<T>",
    "onLoadStartCapture": " ReactEventHandler<T>",
    "onPause": " ReactEventHandler<T>",
    "onPauseCapture": " ReactEventHandler<T>",
    "onPlay": " ReactEventHandler<T>",
    "onPlayCapture": " ReactEventHandler<T>",
    "onPlaying": " ReactEventHandler<T>",
    "onPlayingCapture": " ReactEventHandler<T>",
    "onProgress": " ReactEventHandler<T>",
    "onProgressCapture": " ReactEventHandler<T>",
    "onRateChange": " ReactEventHandler<T>",
    "onRateChangeCapture": " ReactEventHandler<T>",
    "onSeeked": " ReactEventHandler<T>",
    "onSeekedCapture": " ReactEventHandler<T>",
    "onSeeking": " ReactEventHandler<T>",
    "onSeekingCapture": " ReactEventHandler<T>",
    "onStalled": " ReactEventHandler<T>",
    "onStalledCapture": " ReactEventHandler<T>",
    "onSuspend": " ReactEventHandler<T>",
    "onSuspendCapture": " ReactEventHandler<T>",
    "onTimeUpdate": " ReactEventHandler<T>",
    "onTimeUpdateCapture": " ReactEventHandler<T>",
    "onVolumeChange": " ReactEventHandler<T>",
    "onVolumeChangeCapture": " ReactEventHandler<T>",
    "onWaiting": " ReactEventHandler<T>",
    "onWaitingCapture": " ReactEventHandler<T>",
    "onAuxClick": " MouseEventHandler<T>",
    "onAuxClickCapture": " MouseEventHandler<T>",
    "onClick": " MouseEventHandler<T>",
    "onClickCapture": " MouseEventHandler<T>",
    "onContextMenu": " MouseEventHandler<T>",
    "onContextMenuCapture": " MouseEventHandler<T>",
    "onDoubleClick": " MouseEventHandler<T>",
    "onDoubleClickCapture": " MouseEventHandler<T>",
    "onDrag": " DragEventHandler<T>",
    "onDragCapture": " DragEventHandler<T>",
    "onDragEnd": " DragEventHandler<T>",
    "onDragEndCapture": " DragEventHandler<T>",
    "onDragEnter": " DragEventHandler<T>",
    "onDragEnterCapture": " DragEventHandler<T>",
    "onDragExit": " DragEventHandler<T>",
    "onDragExitCapture": " DragEventHandler<T>",
    "onDragLeave": " DragEventHandler<T>",
    "onDragLeaveCapture": " DragEventHandler<T>",
    "onDragOver": " DragEventHandler<T>",
    "onDragOverCapture": " DragEventHandler<T>",
    "onDragStart": " DragEventHandler<T>",
    "onDragStartCapture": " DragEventHandler<T>",
    "onDrop": " DragEventHandler<T>",
    "onDropCapture": " DragEventHandler<T>",
    "onMouseDown": " MouseEventHandler<T>",
    "onMouseDownCapture": " MouseEventHandler<T>",
    "onMouseEnter": " MouseEventHandler<T>",
    "onMouseLeave": " MouseEventHandler<T>",
    "onMouseMove": " MouseEventHandler<T>",
    "onMouseMoveCapture": " MouseEventHandler<T>",
    "onMouseOut": " MouseEventHandler<T>",
    "onMouseOutCapture": " MouseEventHandler<T>",
    "onMouseOver": " MouseEventHandler<T>",
    "onMouseOverCapture": " MouseEventHandler<T>",
    "onMouseUp": " MouseEventHandler<T>",
    "onMouseUpCapture": " MouseEventHandler<T>",
    "onSelect": " ReactEventHandler<T>",
    "onSelectCapture": " ReactEventHandler<T>",
    "onTouchCancel": " TouchEventHandler<T>",
    "onTouchCancelCapture": " TouchEventHandler<T>",
    "onTouchEnd": " TouchEventHandler<T>",
    "onTouchEndCapture": " TouchEventHandler<T>",
    "onTouchMove": " TouchEventHandler<T>",
    "onTouchMoveCapture": " TouchEventHandler<T>",
    "onTouchStart": " TouchEventHandler<T>",
    "onTouchStartCapture": " TouchEventHandler<T>",
    "onPointerDown": " PointerEventHandler<T>",
    "onPointerDownCapture": " PointerEventHandler<T>",
    "onPointerMove": " PointerEventHandler<T>",
    "onPointerMoveCapture": " PointerEventHandler<T>",
    "onPointerUp": " PointerEventHandler<T>",
    "onPointerUpCapture": " PointerEventHandler<T>",
    "onPointerCancel": " PointerEventHandler<T>",
    "onPointerCancelCapture": " PointerEventHandler<T>",
    "onPointerEnter": " PointerEventHandler<T>",
    "onPointerEnterCapture": " PointerEventHandler<T>",
    "onPointerLeave": " PointerEventHandler<T>",
    "onPointerLeaveCapture": " PointerEventHandler<T>",
    "onPointerOver": " PointerEventHandler<T>",
    "onPointerOverCapture": " PointerEventHandler<T>",
    "onPointerOut": " PointerEventHandler<T>",
    "onPointerOutCapture": " PointerEventHandler<T>",
    "onGotPointerCapture": " PointerEventHandler<T>",
    "onGotPointerCaptureCapture": " PointerEventHandler<T>",
    "onLostPointerCapture": " PointerEventHandler<T>",
    "onLostPointerCaptureCapture": " PointerEventHandler<T>",
    "onScroll": " UIEventHandler<T>",
    "onScrollCapture": " UIEventHandler<T>",
    "onWheel": " WheelEventHandler<T>",
    "onWheelCapture": " WheelEventHandler<T>",
    "onAnimationStart": " AnimationEventHandler<T>",
    "onAnimationStartCapture": " AnimationEventHandler<T>",
    "onAnimationEnd": " AnimationEventHandler<T>",
    "onAnimationEndCapture": " AnimationEventHandler<T>",
    "onAnimationIteration": " AnimationEventHandler<T>",
    "onAnimationIterationCapture": " AnimationEventHandler<T>",
    "onTransitionEnd": " TransitionEventHandler<T>",
    "onTransitionEndCapture": " TransitionEventHandler<T>"
  },
  "IntrinsicAttributes": {},
  "IntrinsicClassAttributes": {}
}
